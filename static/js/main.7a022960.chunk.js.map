{"version":3,"sources":["components/Header.jsx","components/Main.jsx","pages/TablePage/components/TableCellHead.jsx","pages/TablePage/components/TableCellBody.jsx","pages/TablePage/components/Table.jsx","components/spinner/spinner.jsx","pages/TablePage/components/Search.jsx","pages/TablePage/index.jsx","components/App.jsx","index.jsx"],"names":["Header","table","className","onClick","fetch","method","body","JSON","stringify","headers","then","data","console","log","catch","err","error","src","alt","data-tip","Main","children","TableCellHead","item","row","column","onSort","bind","TableCellBody","newData","isMutable","is_mutable","type","onChangeHandler","onBlur","autoFocus","onChange","defaultChecked","ref","input","Object","keys","length","parseInt","autofocus_row","autofocus_column","focus","value","key","Date","now","toString","Table","props","useState","currentPage","setCurrentPage","perPage","setAutoFocus","setSortDirection","sortDirection","rowsSearch","search","setTable","tableName","table_name","headerCells","header_cells","cells","newCells","indexLast","indexFirst","pageNumbers","arr","sortField","funcSort","a","b","ordered","sortedArray","finalArray","array","temp","sortType","i","j","push","forEach","sort","reverse","values","item1","e","preventDefault","target","parentElement","getAttribute","val","tempCells","slice","includes","currentList","Math","ceil","id","map","rowCells","lastRow","filter","number","Spinner","Search","setRowsSearch","setSearch","name","placeholder","replace","trimStart","trimEnd","String","toLocaleLowerCase","RegExp","Set","TablePage","loading","setLoading","dataTable","useEffect","res","json","num","obj","setTypeSort","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7a022960.chunk.js","sourcesContent":["import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nfunction Header({ table }) {\n  const save = () => {\n    fetch('https://pacific-atoll-17322.herokuapp.com', {\n      method: 'POST',\n      body: JSON.stringify(table),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(data => {\n        console.log('Table was Saved');\n      })\n      .catch(err => console.error(err));\n  };\n\n  return (\n    <header>\n      <div className=\"save\" onClick={save}>Save</div>\n      <div>\n        <img src=\"https://core.opentext.com/img/app/profile-default-lrg.png\" alt=\"\" data-tip=\"Andrii Maruniak\" />\n      </div>\n      <ReactTooltip />\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\n// eslint-disable-next-line react/prop-types\nfunction Main({ children }) {\n  return (\n    <main>\n      <hr />\n      {children}\n    </main>\n  );\n}\nexport default Main;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction TableCellHead({ item: { row, column, data }, onSort }) {\n  return (\n    <th row={row} column={column} onClick={onSort.bind(null, column)}>{data}</th>\n  );\n}\nexport default TableCellHead;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction TableCellBody({\n  item: {\n    row, column, data, is_mutable: isMutable, type\n  }, onChangeHandler, onBlur, autoFocus\n}) {\n  let newData;\n\n  if (isMutable) {\n    if (type === 'boolean') {\n      if (data) {\n        newData = <input type=\"checkbox\" onChange={onChangeHandler.bind(null)} defaultChecked />;\n      } else {\n        newData = <input type=\"checkbox\" onChange={onChangeHandler.bind(null)} />;\n      }\n    } else {\n      newData = (\n        <input\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={onChangeHandler.bind(null)}\n          ref={input => (input && Object.keys(autoFocus).length > 0 && parseInt(autoFocus.autofocus_row) === row && parseInt(autoFocus.autofocus_column) === column ? input.focus() : '')}\n          onBlur={onBlur.bind(null)}\n          value={data}\n        />\n      );\n    }\n  } else newData = data;\n\n  return (\n    <td column={column} type={type} key={Date.now().toString()}>{newData}</td>\n  );\n}\nexport default TableCellBody;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-loop-func */\nimport React, { useState } from 'react';\nimport TableCellHead from './TableCellHead';\nimport TableCellBody from './TableCellBody';\n\nfunction Table(props) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage] = useState(10);\n  const [autoFocus, setAutoFocus] = useState({});\n  const {\n    setSortDirection, sortDirection, rowsSearch, search, setTable\n  } = props;\n  const { table_name: tableName, header_cells: headerCells, cells } = props.table;\n  const newCells = [];\n  const indexLast = currentPage * perPage;\n  const indexFirst = indexLast - perPage;\n  const pageNumbers = [];\n  let arr = [];\n\n  const onSort = (sortField) => {\n    if (cells.length <= 0) return;\n    const funcSort = (a, b) => {\n      if (a > b) return 1;\n      if (a < b) return -1;\n      return 0;\n    };\n    const ordered = {};\n    const sortedArray = [];\n    const finalArray = [];\n    let array = [];\n    let temp = '';\n    let sortType = '';\n\n    // First Sort where key = sortFiled and have array of objects\n\n    for (let i = 0; i < cells.length; i += 1) {\n      const j = i;\n      const {\n        row, column, data, type\n      } = cells[i];\n      array.push(cells[i]);\n\n      if (column === parseInt(sortField)) {\n        temp = data;\n        sortType = type;\n      }\n\n      if (i === cells.length - 1 || row !== cells[1 + j].row) {\n        if (finalArray[temp]) {\n          array.forEach((item) => {\n            finalArray[temp].push(item);\n          });\n        } else {\n          finalArray[temp] = array;\n        }\n\n        if (i !== cells.length - 1) array = [];\n      }\n    }\n\n    // Second Sort by keys\n\n    const keys = [];\n    if (sortType === 'number') {\n      Object.keys(finalArray).forEach((key) => keys.push(parseInt(key)));\n    } else Object.keys(finalArray).forEach((key) => keys.push(key));\n\n    if (sortDirection[parseInt(sortField)] === 'asc') {\n      keys.sort(funcSort).forEach((key) => {\n        ordered[`${key}a`] = finalArray[key];\n      });\n      sortDirection[sortField] = 'desc';\n      setSortDirection(sortDirection);\n    } else {\n      keys.sort(funcSort).reverse().forEach((key) => {\n        ordered[`${key}a`] = finalArray[key];\n      });\n      sortDirection[sortField] = 'asc';\n      setSortDirection(sortDirection);\n    }\n\n    // Added to cells array\n\n    Object.values(ordered).forEach((item) => {\n      item.forEach(item1 => sortedArray.push(item1));\n    });\n    setTable({ ...props.table, cells: sortedArray });\n    setCurrentPage(1);\n  };\n\n  const onChangeHandler = (e) => {\n    e.preventDefault();\n    const type = e.target.parentElement.getAttribute('type');\n    const column = e.target.parentElement.getAttribute('column');\n    const row = e.target.parentElement.parentElement.getAttribute('row');\n    const val = e.target.value;\n    const tempCells = cells.slice();\n\n    tempCells.forEach((item) => {\n      if (item.row === parseInt(row) && item.column === parseInt(column)) {\n        if (type === 'boolean') {\n          item.data = !item.data;\n        } else if (type === 'string') {\n          item.data = val;\n        } else item.data = parseInt(val);\n      }\n    });\n\n    setAutoFocus({ autofocus_row: row, autofocus_column: column });\n    setTable({ ...props.table, cells: tempCells });\n  };\n\n  const onBlur = () => {\n    setAutoFocus({});\n  };\n\n  const addRow = () => {\n    const rowCells = cells.slice();\n    if (rowCells.length === 0) return;\n    const lastRow = rowCells[rowCells.length - 1].row;\n    const filteredCells = rowCells.filter((item) => item.row === lastRow);\n\n    filteredCells.forEach((item) => {\n      rowCells.push({\n        ...item, row: lastRow + 1, data: '', is_mutable: true\n      });\n    });\n    setTable({ ...props.table, cells: rowCells });\n  };\n\n  // Filter search with render items\n\n  if (search && rowsSearch.length > 0) {\n    for (let i = 0; i < cells.length; i += 1) {\n      const j = i;\n      const { row } = cells[i];\n\n      if (rowsSearch.includes(parseInt(row))) {\n        arr.push(<TableCellBody\n          item={cells[i]}\n          key={i}\n          autoFocus={autoFocus}\n          onChangeHandler={onChangeHandler}\n          onBlur={onBlur}\n        />);\n        if (i === cells.length - 1) {\n          newCells.push(<tr row={row} key={i}>{arr}</tr>);\n        } else if (row !== cells[1 + j].row) {\n          newCells.push(<tr row={row} key={i}>{arr}</tr>);\n          arr = [];\n        }\n      }\n    }\n  } else if (!search && !rowsSearch.length) {\n    for (let i = 0; i < cells.length; i += 1) {\n      const j = i;\n      const { row } = cells[i];\n\n      arr.push(<TableCellBody\n        item={cells[i]}\n        key={i}\n        autoFocus={autoFocus}\n        onChangeHandler={onChangeHandler}\n        onBlur={onBlur}\n      />);\n      if (i === cells.length - 1) {\n        newCells.push(<tr row={row} key={i}>{arr}</tr>);\n      } else if (row !== cells[1 + j].row) {\n        newCells.push(<tr row={row} key={i}>{arr}</tr>);\n        arr = [];\n      }\n    }\n  }\n\n\n  const currentList = newCells.slice(indexFirst, indexLast);\n\n  for (let i = 1; i <= Math.ceil(newCells.length / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <>\n      <h1>{tableName}</h1>\n      <div id=\"container\">\n        <table id=\"info\">\n          <thead>\n            <tr row=\"0\">\n              {headerCells.map((item, key) => <TableCellHead item={item} onSort={onSort} key={key} />)}\n            </tr>\n          </thead>\n          <tbody>\n            {currentList}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"add-row\" onClick={addRow}>Add row</div>\n\n      <ul className=\"pagination\">\n        {pageNumbers.length > 1 ? pageNumbers.map((number) => (\n          <li\n            key={number}\n            className={parseInt(currentPage) === number ? 'active' : null}\n            id={number}\n            onClick={({ target: { id } }) => setCurrentPage(id)}\n          >\n            {number}\n          </li>\n        )) : null}\n      </ul>\n    </>\n  );\n}\nexport default Table;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => (\n  <div className=\"l_main\">\n    <div className=\"l_square\">\n      <span />\n      <span />\n      <span />\n    </div>\n    <div className=\"l_square\">\n      <span />\n      <span />\n      <span />\n    </div>\n    <div className=\"l_square\">\n      <span />\n      <span />\n      <span />\n    </div>\n    <div className=\"l_square\">\n      <span />\n      <span />\n      <span />\n    </div>\n  </div>\n);\nexport default Spinner;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction Search({\n  table, search, setRowsSearch, setSearch\n}) {\n  const dataSearch = e => {\n    const arr = [];\n    let { value } = e.target;\n    value = value.replace(/[.*+?^${}()|[\\]\\\\]/g, '').trimStart().trimEnd();\n    table.filter(({ row, data, type }) => {\n      if (type === 'string' || type === 'number') {\n        if (value !== '' && String(data).toLocaleLowerCase().search(new RegExp(`^${value.toLocaleLowerCase()}`, 'g')) !== -1) {\n          arr.push(parseInt(row));\n          return true;\n        }\n      }\n      return false;\n    });\n    setRowsSearch(arr ? [...new Set(arr)] : []);\n    setSearch(value);\n  };\n\n  return (\n    <div className=\"search\">\n      <input type=\"text\" name=\"search\" placeholder=\"Search...\" value={search} onChange={dataSearch} />\n    </div>\n  );\n}\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport Main from '../../components/Main';\nimport Table from './components/Table';\nimport Spinner from '../../components/spinner/spinner';\nimport Search from './components/Search';\n\nfunction TablePage() {\n  const [loading, setLoading] = useState(true);\n  const [dataTable, setTable] = useState({});\n  const [search, setSearch] = useState('');\n  const [rowsSearch, setRowsSearch] = useState([]);\n  const [sortDirection, setSortDirection] = useState({});\n\n  useEffect(() => {\n    const setTypeSort = (num) => {\n      const obj = {};\n      for (let i = 0; i < num; i += 1) {\n        obj[i] = 'none';\n      }\n      setSortDirection(obj);\n    };\n    fetch('https://pacific-atoll-17322.herokuapp.com/?do=get')\n      .then(res => res.json())\n      .then(data => {\n        setTable(data);\n        setTypeSort(data.header_cells.length);\n        setLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  return (\n    <>\n      <Header table={dataTable} />\n      <Main>\n        <Search\n          search={search}\n          table={dataTable.cells}\n          setSearch={setSearch}\n          setTable={setTable}\n          setRowsSearch={setRowsSearch}\n        />\n        {!loading ? (\n          <Table\n            table={dataTable}\n            setTable={setTable}\n            search={search}\n            rowsSearch={rowsSearch}\n            sortDirection={sortDirection}\n            setSortDirection={setSortDirection}\n          />\n        ) : <Spinner />}\n      </Main>\n    </>\n  );\n}\nexport default TablePage;\n","import React from 'react';\nimport TablePage from '../pages/TablePage';\nimport '../styles/main.css';\n\nfunction App() {\n  return (\n    <TablePage />\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}